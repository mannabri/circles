{"version":3,"sources":["components/Circle/Circle.js","components/Controls/Controls.js","App.js","reportWebVitals.js","index.js","components/Circle/Circle.module.css","components/Controls/Controls.module.css"],"names":["circle","props","userStyle","backgroundColor","color","className","styles","Circle","style","controls","customStyle","Controls","onClick","clicked","App","state","circles","colors","handleAddCircle","newCirclesArray","push","setState","this","map","index","activeColor","Math","floor","random","length","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6QAgBeA,EAdA,SAAAC,GACb,IAAMC,EAAY,CAChBC,gBAAiBF,EAAMG,OAGzB,OACE,qBACEC,UAAWC,IAAOC,OAClBC,MAAON,K,gBCMEO,EAdE,SAAAR,GACf,IAAMS,EAAc,CAClBP,gBAAiBF,EAAMG,OAEzB,OACE,qBACEC,UAAWC,IAAOK,SAClBH,MAAOE,EACPE,QAASX,EAAMY,WCsCNC,E,4MAzCbC,MAAQ,CACNC,QAAS,GACTC,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,Y,EAIJC,gBAAkB,SAAAd,GAChB,IAAMe,EAAe,YAAO,EAAKJ,MAAMC,SACvCG,EAAgBC,KAAK,CAAEhB,MAAOA,IAE9B,EAAKiB,SAAS,CACZL,QAASG,K,uDAIH,IAAD,OACHH,EAAU,KAEVM,KAAKP,MAAMC,UACbA,EAAUM,KAAKP,MAAMC,QAAQO,KAAI,SAACvB,EAAQwB,GAAT,OAAmB,cAACjB,EAAD,CAAoBH,MAAOJ,EAAOI,OAArBoB,OAGnE,IAAMC,EAAcH,KAAKP,MAAME,OAC7BS,KAAKC,MAAMD,KAAKE,SAAWN,KAAKP,MAAME,OAAOY,SAG/C,OACE,sBAAKxB,UAAWC,IAAOQ,IAAvB,UACE,cAACH,EAAD,CAAUP,MAAOqB,EAAaZ,QAAS,kBAAM,EAAKK,gBAAgBO,MACjET,S,GApCSc,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,sCCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,uB,kBCAzDD,EAAOC,QAAU,CAAC,SAAW,8B","file":"static/js/main.909134bf.chunk.js","sourcesContent":["import styles from './Circle.module.css';\n\nconst circle = props => {\n  const userStyle = {\n    backgroundColor: props.color\n  }\n\n  return (\n    <div\n      className={styles.Circle} \n      style={userStyle}\n    >\n    </div>\n  )\n}\n\nexport default circle;","import styles from './Controls.module.css';\n\nconst controls = props => {\n  const customStyle = {\n    backgroundColor: props.color\n  }\n  return (\n    <div\n      className={styles.Controls} \n      style={customStyle}\n      onClick={props.clicked}\n    >\n    </div>\n  )\n}\n\nexport default controls;","import { Component } from 'react';\n\nimport styles from './App.module.css';\nimport Circle from './components/Circle/Circle';\nimport Controls from './components/Controls/Controls';\n\nclass App extends Component {\n  state = {\n    circles: [],\n    colors: [\n      '#01BEFE',\n      '#FFDD00',\n      '#FF7D00',\n      '#FF006D',\n      '#ADFF02',\n      '#8F00FF',\n    ]\n  }\n\n  handleAddCircle = color => {\n    const newCirclesArray = [...this.state.circles];\n    newCirclesArray.push({ color: color });\n\n    this.setState({\n      circles: newCirclesArray\n    })\n  }\n\n  render() {\n    let circles = null\n\n    if (this.state.circles) {\n      circles = this.state.circles.map((circle, index) => <Circle key={index} color={circle.color} />)\n    }\n\n    const activeColor = this.state.colors[\n      Math.floor(Math.random() * this.state.colors.length)\n    ];\n\n    return (\n      <div className={styles.App}>\n        <Controls color={activeColor} clicked={() => this.handleAddCircle(activeColor)} />\n        {circles}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Circle\":\"Circle_Circle__2_6TC\",\"grow\":\"Circle_grow__2cWRb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Controls\":\"Controls_Controls__3E7kZ\"};"],"sourceRoot":""}